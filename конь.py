import gui
import time
import random

#начальное состояние - неопределенное (фигура не посещала)
# доска = [[None]*8 for i in range(8)]

# gui.highlight_cell(1, 1)

#куда может походить фигура
# теоретически_возможные_движения = [(1, 0), (0, -1), (-1, 0),  (0, 1)]
теоретически_возможные_движения = [(1, 2), (2, 1), (2, -1), (1, -2), (-1, -2), (-2, -1), (-2, 1), (-1, 2)]

#откуда стартуем
x0, y0 = 1, 1
#куда хотим придти
xn, yn = 7, 8

#словарь будет хранить список клеток, до которых фигура сможет дойти на i-ом шаге
волны = {}
#множество всех клеток, до которых можно добраться
множество_достижимых_клеток = set([(x0, y0)])

gui.highlight_cell(x0, y0, "yellow")
time.sleep(0.5)

номер_волны = 0

#цикл поиска пути. в начальный момент времени стоим в начальной точке
while (xn, yn) not in множество_достижимых_клеток:
    #будем рассчитывать для каждой волны новые клетки, куда может добраться фигура
    номер_волны += 1
    #...и помещать в словарь "волны"
    волны[номер_волны] = set()

    цвет_текущей_волны = '#'+''.join([random.choice('0123456789abcdef') for i in range(6)])

    for x, y in множество_достижимых_клеток:
        for смещение_x, смещение_y in теоретически_возможные_движения:
            потенциально_достижимая_клетка = x + смещение_x, y + смещение_y

            if 1 <= потенциально_достижимая_клетка[0] <= 8 and 1 <= потенциально_достижимая_клетка[1] <= 8:
                if потенциально_достижимая_клетка not in множество_достижимых_клеток:
                    #добавляем новую клетку. она прошла двойной скрининг)
                    if потенциально_достижимая_клетка not in волны[номер_волны]:
                        волны[номер_волны].add(потенциально_достижимая_клетка)

                        gui.highlight_cell(*потенциально_достижимая_клетка, цвет_текущей_волны)
                        gui.draw_arrow(x, y, *потенциально_достижимая_клетка, цвет_текущей_волны)
                        time.sleep(0.5)

    множество_достижимых_клеток |= волны[номер_волны]

    print("Волна {}\n\tновые клетки {}\n\tмножество достижимых клеток {}".format(номер_волны, волны[номер_волны], множество_достижимых_клеток))

#все, добрались!
#теперь восстановим последовательность ходов от конечной точки к начальной
x, y = xn, yn
#начинаем с последней
последовательность_ходов = [(xn, yn)]
while номер_волны > 1:
    номер_волны -= 1

    for смещение_x, смещение_y in теоретически_возможные_движения:
        # дерево_ходов[(x, y)].append((x + смещение_x, y + смещение_y))
        потенциально_достижимая_клетка = x + смещение_x, y + смещение_y
        if потенциально_достижимая_клетка in волны[номер_волны]:
            x, y = потенциально_достижимая_клетка
            break

    последовательность_ходов.append(потенциально_достижимая_клетка)

#заканчиваем первой
последовательность_ходов.append((x0, y0))

print("---------------------------------------")
print("Последовательность ходов: ", последовательность_ходов[::-1])

gui.окно.mainloop()
